name: deploy flyway

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "database/migration/**"
      - ".github/workflows/deploy-flyway.yml"
      - ".github/actions/build/**"
      - ".github/actions/migrate/**"

concurrency:
  group: ${{ github.workflow }}

permissions:
  id-token: write
  contents: read
  actions: read

env:
  IMAGE_TAG: ${{ github.sha }}
  OIDC_ROLE_ARN: "arn:aws:iam::${{ secrets.GROUP_AWS_ACCOUNT_ID }}:role/${{ vars.TEAM_NAME }}-oidc-github"

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        id: build
        uses: ./.github/actions/build
        with:
          repo_name: ${{ vars.TEAM_NAME }}-flyway
          image_tag: ${{ env.IMAGE_TAG }}
          oidc_role_arn: ${{ env.OIDC_ROLE_ARN }}
          docker_context: database
          docker_target: flyway
      - name: Replace image placeholder
        run: |
          sed -i 's/<TEAM_NAME>/${{ vars.TEAM_NAME }}/g' database/task_def.json
          sed -i 's/<GROUP_AWS_ACCOUNT_ID>/${{ secrets.GROUP_AWS_ACCOUNT_ID }}/g' database/task_def.json
      - name: render new task definition
        id: render-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: database/task_def.json
          container-name: ${{ vars.TEAM_NAME }}-flyway
          image: ${{ steps.build.outputs.ecr_registry }}/${{ vars.TEAM_NAME }}-flyway:${{ env.IMAGE_TAG }}
      - name: Deploy to Amazon ECS
        id: ecs-deploy
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render-container.outputs.task-definition }}
          cluster: ${{ vars.CLUSTER_NAME }}
          run-task: true
          run-task-security-groups: ${{ vars.SECURITY_GROUP_IDS }}
          run-task-subnets: ${{ vars.SUBNET_IDS }}
          wait-for-task-stopped: true
      - uses: ./.github/actions/notification
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
